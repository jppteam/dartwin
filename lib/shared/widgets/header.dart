import 'dart:async';

import 'package:flutter/material.dart';

class Header extends StatelessWidget {
  const Header({super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      spacing: 20,
      children: [
        SelectableText(
          '2025 –≠–¢–û –û–ß–ï–†–ï–î–ù–û–ô –ì–û–î –î–ê–†–¢ –ü–û–ë–ï–î–´',
          style: Theme.of(context).textTheme.bodyLarge,
        ),
        SelectableText.rich(
          TextSpan(
            text: '–ü–æ—á–µ–º—É 2025 —ç—Ç–æ –æ—á–µ—Ä–µ–¥–Ω–æ–π –≥–æ–¥ –¥–∞—Ä—Ç –ø–æ–±–µ–¥—ã?',
            style: Theme.of(context).textTheme.bodySmall,
            children: const [
              TextSpan(text: '\n1. –î–∞—Ä—Ç –ø–æ–±–µ–¥–∞'),
              TextSpan(
                text:
                    '\n2. üöÄ Dart is blazingly fast and memory-efficient (man I love DartVM) üöÄ',
              ),
              TextSpan(text: '\n3. –û—á–µ—Ä–µ–¥–Ω–∞—è –¥–∞—Ä—Ç –ø–æ–±–µ–¥–∞'),
              TextSpan(
                text:
                    '\n4. RenderBox was not laid out: RenderViewport#925a8 NEEDS-LAYOUT NEEDS-PAINT',
              ),
            ],
          ),
        ),
        const YearsText(),
      ],
    );
  }
}

class YearsText extends StatefulWidget {
  const YearsText({super.key});

  @override
  State<YearsText> createState() => _YearsTextState();
}

class _YearsTextState extends State<YearsText> {
  @override
  Widget build(BuildContext context) {
    return StreamBuilder<void>(
        stream: Stream.periodic(const Duration(seconds: 1)),
        builder: (context, snapshot) {
          return SelectableText.rich(
            TextSpan(
              text: '–î–ê–†–¢ –ü–û–ë–ï–î–ê –£–ñ–ï',
              style: Theme.of(context).textTheme.bodyMedium,
              children: [
                TextSpan(
                  text:
                      ' ${(DateTime.now().difference(DateTime(2011, 10, 10)).inSeconds / 31536000).toStringAsFixed(8)} ',
                  style: Theme.of(context)
                      .textTheme
                      .bodyMedium
                      ?.copyWith(color: Colors.red),
                ),
                const TextSpan(
                  text: '–õ–ï–¢',
                ),
              ],
            ),
          );
        });
  }
}
